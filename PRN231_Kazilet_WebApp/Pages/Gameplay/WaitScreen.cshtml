@page
@model PRN231_Kazilet_WebApp.Pages.Gameplay.WaitScreenModel
@{
}

<div style="background-color:#381271FF" class="flex items-center justify-center p-8">
    <div class="w-full max-w-3xl rounded-lg overflow-hidden">
        <div class="p-6 text-center">
            <h1 class="text-4xl font-bold text-white mb-2">GAME PIN</h1>
            <div class="text-7xl font-bold text-white tracking-wider">@Model.Code</div>
        </div>
        <div class="p-8 text-center">
            <p class="text-xl text-white mb-8">Waiting for players to join...</p>
        </div>
        <div id="code" style="display:none">@Model.Code</div>
        <div id="username" style="display:none">@Model.Username</div>
        <div class="p-6 bg-gray-100">
            <h2 class="text-2xl bg-white font-bold text-purple-800 mb-4">Players Joined: <span id="no-players">@(Model.Players.Count)</span></h2>
            <div id="playerDiv" class="flex justify-center flex-wrap">
                @for (int i = 0; i < Model.Players.Count; i++)
                {
                    <div class="flex mr-4 items-center flex-row p-3  text-center animate-pulse">
                        <div class="relative mr-2 w-10 h-10 overflow-hidden bg-gray-100 rounded-full dark:bg-gray-600">
                            <svg class="absolute w-12 h-12 text-gray-400 -left-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path></svg>
                        </div>
                        <div class="text-lg">
                            @Model.Players[i]
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>



<script>
    joinGame();
    async function joinGame() {
        const apiUrl = "https://localhost:7024/api/Gameplay/join?code=" + document.getElementById("code").innerHTML + "&username=" + document.getElementById("username").innerHTML;
        try {
            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    // Các header khác nếu cần
                },
                body: JSON.stringify({
                    // Dữ liệu gửi trong request body, nếu cần
                })
            });

            console.log(response);

            if (response.ok) {
                const data = await response.text();
                connect(data);
            } else {
                // Ném lỗi với thông báo từ phản hồi
                const errorData = await response.json();
                throw new Error(`Error ${response.status}: ${errorData.message || 'Unknown error occurred'}`);
            }
        } catch (error) {

            console.log(error);
        }
    }
</script>
